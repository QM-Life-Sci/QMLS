---
title: "Linear Models: Multiple Continuous Predictors"
author:
  - Elizabeth King
  - Kevin Middleton
format:
  revealjs:
    theme: [default, custom.scss]
    standalone: true
    self-contained: true
    logo: QMLS_Logo.png
    slide-number: true
    show-slide-number: all
code-annotations: hover
bibliography: QMLS_Bibliography.bib
csl: evolution.csl
---

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(cowplot)
theme_set(theme_cowplot())

library(readxl)
library(GGally)
library(ggrepel)
library(plotly)
library(wesanderson)
```

## Multiple regression

New concerns with multiple predictors

1. How are my predictors related to *each other*?
    - Correlations *between* predictors
    - Predictors interacting with one another
    - Predictors masking the effects of one another
2. Which predictors should I include?
    - Model too specific
    - Model too general
    - Model just right


## What is multiple regression *really* doing?

Determine the association of each predictor while "controlling" for the other predictors.

How?

- Allow the other variables to account for variation *in the predictor of interest*
    - Multiple regression of the predictor of interest on the remaining predictors (response variable not involved)
- Regress the response on the *residual* variance of the predictor of interest


## What is multiple regression *really* doing?

$$Y = \beta_0 + \beta_1 X_1 + \beta_2 X_2 + \beta_3 X_3 + \beta_4 X_4$$

To estimate the coefficient of $X_1$:

- Regress $X_1$ on $X_2 + X_3 + X_4$

$$X_1 = \gamma_0 + \gamma_1 X_2 + \gamma_2 X_3 + \gamma_3 X_4$$

- Calculate residuals for the model.
- Regress $Y$ on the residuals.
- The estimated coefficient is $\beta_1$.


## Milk content across mammalian species

What are the contributions of the fat and lactose content of mammalian milk to total milk energy?

- *Outcome*: Kilocalories of energy per gram of milk
- *Predictors*:
    - Percent fat
    - Percent lactose


## Milk content across mammalian species

```{r}
#| echo: true

Milk <- read_excel("../data/Milk.xlsx", na = "NA") |> 
  select(Species, Milk_Energy, Fat, Lactose) |>
  drop_na()
glimpse(Milk)
```

Ignore that these are comparative species-level data.


## Visualizing data

```{r}
fig <- plot_ly() |>
  add_markers(data = Milk,
              x = ~ Fat,
              y = ~ Lactose,
              z = ~ Milk_Energy,
              size = 1,
              showlegend = FALSE) |>
  hide_colorbar() |>
  layout(scene = list(xaxis = list(title = 'Fat'),
                      yaxis = list(title = 'Lactose'),
                      zaxis = list(title = 'Milk Energy')))

fig
```


## Visualizing data

```{r, fig.height = 4}
library(GGally)
ggscatmat(Milk, columns = 2:4)
```


## Multiple regression {.smaller}

```{r}
fm <- lm(Milk_Energy ~ Fat + Lactose, data = Milk)
summary(fm)
```


## Visualizing multiple regression

```{r}
# https://stackoverflow.com/questions/38331198/add-regression-plane-to-3d-scatter-plot-in-plotly

# Graph resolution
graph_reso <- 0.5

# Setup axis
axis_x <- seq(min(Milk$Fat), max(Milk$Fat), by = graph_reso)
axis_y <- seq(min(Milk$Lactose), max(Milk$Lactose), by = graph_reso)

# Sample points
fm_surface <- expand.grid(Fat = axis_x,
                          Lactose = axis_y,
                          KEEP.OUT.ATTRS = FALSE)
fm_surface$Milk_Energy <- predict.lm(fm, newdata = fm_surface)
fm_surface <- reshape2::acast(fm_surface,
                              Lactose ~ Fat,
                              value.var = "Milk_Energy")

fig2 <- add_trace(p = fig,
                  z = fm_surface,
                  x = axis_x,
                  y = axis_y,
                  opacity = 0.25,
                  colorscale = list(c(0, 1), c("black", "black")),
                  type = "surface",
                  showlegend = FALSE) |>
  hide_colorbar()

fig2
```


## Estimate `Fat` coefficient

1. Use `Lactose` to predict `Fat`, which will take the effect of `Lactose` out of the model when we predict `Milk_Energy`
1. Extract the residuals and add them onto the data.

```{r}
fm_Lact <- lm(Fat ~ Lactose, data = Milk)
Milk$resid_Lact <- residuals(fm_Lact)
head(Milk)
```


## Estimate `Fat` coefficient

```{r echo=FALSE}
F_v_L <- ggplot(Milk, aes(Lactose, Fat, label = Species)) +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE, color = "blue") +
  geom_point() +
  labs(x = "Percent Lactose", y = "Percent Fat")
print(F_v_L + geom_text_repel(size = 3, force = 15))
```


## Estimate `Fat` coefficient

```{r echo=FALSE}
milk_res_lact <- ggplot(Milk, aes(resid_Lact, Milk_Energy,
                               label = Species)) +
  geom_vline(xintercept = 0, color = "blue") +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE,
              color = "darkgreen") +
  geom_point() +
  labs(x = "Residual Fat Percent", y = "Milk Energy")
print(milk_res_lact + geom_text_repel(size = 3, force = 15))
```


## Estimate `Fat` coefficient

```{r}
coef(lm(Milk_Energy ~ resid_Lact, data = Milk))
coef(fm)
```


## Estimate `Lactose` coefficient

1. Use `Fat` to predict `Lactose`, which will take the effect of `Fat` out of the model when we predict `Milk_Energy`
1. Extract the residuals and add them onto the data.frame `Milk`.

```{r}
fm_Fat <- lm(Lactose ~ Fat, data = Milk)
Milk$resid_Fat <- residuals(fm_Fat)
```


## Estimate `Lactose` coefficient

```{r echo=FALSE}
L_v_F <- ggplot(Milk, aes(Fat, Lactose, label = Species)) +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE, color = "blue") +
  geom_point() +
  labs(y = "Percent Lactose", x = "Percent Fat")
print(L_v_F + geom_text_repel(size = 3, force = 15))
```


## Estimate `Lactose` coefficient

```{r echo=FALSE}
milk_res_fat <- ggplot(Milk, aes(resid_Fat, Milk_Energy,
                              label = Species)) +
  geom_vline(xintercept = 0, color = "blue") +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE,
              color = "darkgreen") +
  geom_point() +
  labs(x = "Residual Lactose Percent", y = "Milk Energy")
print(milk_res_fat + geom_text_repel(size = 3, force = 15))
```


## Estimate `Lactose` coefficient

```{r}
coef(lm(Milk_Energy ~ resid_Fat, data = Milk))
coef(fm)
```


## Compare

```{r echo=FALSE}
plot_grid(F_v_L, L_v_F, ncol = 2)
```


## Compare

```{r echo=FALSE}
plot_grid(milk_res_lact, milk_res_fat, ncol = 2)
```


## Multicollinearity

High correlation between predictors leaves little residual variation to be used for explaining the outcome variable.

```{r echo=FALSE}
ggscatmat(Milk, columns = 2:4)
```


## Masking

Multiple predictors are useful for predicting outcomes when bivariate relationships with the response variable is not strong.

But:

- Associative relationships can be obscured when two predictors are somewhat correlated with one another.


## Mammal milk data in a different context

Milk is a big energetic investment

- Is there a significant association between energy content of milk while controlling for neocortex size and body size?
- Do primates with larger brains produce significantly more nutritious milk so their offspring can grow quickly (because they must grow quickly) ?


## Visualizing

```{r}
Milk <- read_excel("../data/Milk.xlsx", na = "NA") |> 
  select(Species, Milk_Energy, Mass, Neocortex) |>
  mutate(log_Mass = log(Mass)) |> 
  drop_na()

p1 <- ggplot(Milk, aes(log_Mass, Milk_Energy, label = Species)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE) +
  labs(x = "log Mass (kg)", y = "Milk Energy (kcal/g)") +
  geom_text_repel(size = 3, force = 15)
p2 <- ggplot(Milk, aes(Neocortex, Milk_Energy, label = Species)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE) +
  labs(x = "Percentage Neocortex", y = "Milk Energy (kcal/g)") +
  geom_text_repel(size = 3, force = 15)
plot_grid(p2, p1, ncol = 2)
```


## Visualizing

```{r, echo=FALSE}
ggscatmat(Milk, columns = c(2, 4, 5))
```


## Bivariate model of Neocortex {.smaller}

```{r}
fm_Neo <- lm(Milk_Energy ~ Neocortex, data = Milk)
summary(fm_Neo)
```


## Bivariate model of log Mass {.smaller}

```{r}
fm_Mass <- lm(Milk_Energy ~ log_Mass, data = Milk)
summary(fm_Mass)
```


## Multivariate model {.smaller}

```{r}
fm_Multi <- lm(Milk_Energy ~ Neocortex + log_Mass, data = Milk)
summary(fm_Multi)
```


## Interpretation

- Both coefficients go up
    - Neocortex: $0.005 \rightarrow 0.03$ (*P* = 0.004)
    - log Mass: $-0.03 \rightarrow -0.1$ (*P* = 0.002)

Regression asks (and answers):

1. Do species that have high neocortex percentage *for their mass* have higher energy milk?
1. Do species with high body mass *for their neocortex percentage* have higher energy milk?


## Neocortex vs. log Mass

```{r echo=FALSE}
ggplot(Milk, aes(log_Mass, Neocortex, label = Species)) +
  geom_point() +
  labs(x = "log Mass (kg)", y = "Neocortex Percentage") +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE) +
  geom_text_repel(size = 3, force = 15)
```


## Milk Energy vs. Residual Mass

```{r echo=FALSE}
Milk$resid_Neo <- residuals(lm(Neocortex ~ log_Mass, data = Milk))
ggplot(Milk, aes(resid_Neo, Milk_Energy, label = Species)) +
  geom_vline(xintercept = 0, color = "blue") +
  geom_point() +
  labs(x = "Residual Neocortex", y = "Milk Energy") +
  geom_smooth(formula = y ~ x, method = "lm", se = FALSE,
              color = "darkgreen") +
  geom_text_repel(size = 3, force = 15)
```

