---
title: "Accounting for Non-independence"
author:
  - Elizabeth King
  - Kevin Middleton
format:
  revealjs:
    theme: [default, custom.scss]
    standalone: true
    self-contained: true
    logo: QMLS_Logo.png
    slide-number: true
    show-slide-number: all
code-annotations: hover
bibliography: QMLS_Bibliography.bib
csl: evolution.csl
---

## Independence

:::: {.columns}

::: {.column width="40%"}

- Observations *do not* influence others
- Independent and identically distributed
- In biological data, independence assumption is often violated

:::

::: {.column width="60%"}

![](https://i.imgur.com/2NrNYHZ.png){fig-align="center"}

:::

::::


```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

library(knitr)
knitr::opts_chunk$set(cache = TRUE)
library(tidyverse)
library(cowplot)
library(readxl)

library(ggtree)
library(ggrepel)
library(ape)
library(wesanderson)
library(nlme)
library(AICcmodavg)

theme_set(theme_cowplot())
```


## When is the independence assumption violated?
  
1. Repeat sampling over time of the same location, individual, or other experimental unit
2. When there is a hierarchical structure to the data
3. Spatial relationships    
4. Shared ancestry
    - Phylogenetic relatedness
    - Genetic relatedness
5. Many other contexts


## Why is non-independence a problem?

Hemoglobin levels in six species of rodents

```{r}
ex.dat <- data.frame(Altitude = c(0, 1400, 2500, 3500, 4500, 6000),
                     Hemoglobin = c(9, 15, 11, 21, 16, 20),
                     Clade = rep(c('Low', 'High'),each = 3)) 
ggplot(ex.dat, aes(x = Altitude, y = Hemoglobin)) +
  geom_point(size = 6) +
  theme(axis.title = element_text(face = "bold"))
```


## Why is non-independence a problem?

Hemoglobin levels in six species of rodents

```{r}
ggplot(ex.dat, aes(x = Altitude, y = Hemoglobin, color = Clade)) +
  geom_point(size = 6) +
  scale_color_manual(values = c("blue", "red")) +
  theme(legend.position = c(0.82, 0.17))
```


## Why is non-independence a problem?

**Pseudoreplication**: artificially inflated sample size lead to unfounded confidence

![](https://i.imgur.com/2AzYFXF.png){fig-align="center"}


## Conventional statistics assume

![](https://i.imgur.com/FeMvrT7.png){fig-align="center"}


## Genotype-Phenotype Relationships

Is a given genotype associated with a phenotype of interest?

- Consider two populations with ancestry differences
- Not accounting for ancestry differences can lead to spurious associations
- Population structure & relatedness are issues for all genetic association studies
    
## Genotype-Phenotype Relationships

```{r}
set.seed(23141)

pop <- data.frame('population' = rep(c('A', 'B'), each = 20), 
                  'genotype' = c(c(rep(0, 14), rep(1, 6)),
                                 c(rep(0, 3), rep(1, 17))),
                  'phenotype' = c(rnorm(20, 5), rnorm(20, 3)))

set.seed(23497823)
ggplot(pop, aes(x = as.factor(genotype), y = phenotype)) +
  geom_point(position = position_jitter(0.05), alpha = 0.8) +
  labs(x = 'Genotype', y = "Phenotype") +
  stat_summary(fun = mean, geom = "point", size = 5,
               color = "grey60") + 
  stat_summary(fun.data = mean_se, geom = "errorbar",
               width = 0.05,
               color = "grey60", size = 1)
```

Is a given genotype associated with a phenotype of interest?


## Genotype-Phenotype Relationships

```{r}
set.seed(23497823)
ggplot(pop, aes(x = as.factor(genotype), y = phenotype,
                color = population)) +
  geom_point(position = position_jitter(0.05), alpha = 0.8) +
  labs(x = 'Genotype', y = "Phenotype") +
  stat_summary(fun = mean, geom = "point", size = 5,
               color = "grey60") + 
  stat_summary(fun.data = mean_se, geom = "errorbar",
               width = 0.05,
               color = "grey60", size = 1) +
  scale_color_manual(values = c("orange", "purple"))
```

An effect of both 1) different allele frequency in two pops, and 2) different average trait value in two pops


## Hierarchical structure

Review 09-4

- FIXME examples


## Repeated sampling

:::: {.columns}

::: {.column width="50%"}

Review 09-3 and 09-4 FIXME

- Squid growth
- Orthodontic growth
- Yearly climate data 

:::

::: {.column width="50%"}

```{r}
#| message: false

CB <- read_csv("../data/cherry_blossoms.csv")

CB |> 
  select(year, doy, temp) |> 
  rename(`Day of 1st\nBlossom` = doy,
         `March Temp.\nEstimate` = temp) |> 
  pivot_longer(cols = -year, names_to = "Variable", values_to = "Value") |> 
  drop_na() |> 
  ggplot(aes(x = year, y = Value)) +
  geom_point(size = 1) +
  facet_grid(Variable ~ ., scales = "free_y") +
  geom_smooth(formula = y ~ poly(x, 20), method = "lm", se = FALSE)
```

:::

::::


## Similarities between spatial, phylogenetic, and pedigree analyses

- Pairwise "distance" between observations
- Sometimes
    - Variance-covariance matrix
    - Normalized to maximum distance
- Weights the regression by how closely "related" the observed values are
    - Accounts for expectation that spatial or genetic close relatives will be more similar than expected by chance


## Spatial relationships

Irregular sampling along the Missouri River

```{r}
img <- png::readPNG(RCurl::getURLContent("https://i.imgur.com/r01a9pz.png"))

pts <- tribble(
  ~long, ~lat,
  1031.500, 387.500,
  1241.500, 617.500,
  1341.500, 719.500,
  1389.500, 809.500,
  1512, 886,
  1707.500, 791.500,
  1945.500, 843.500,
  2077.500, 893.500
) |> 
  rownames_to_column(var = "Site") |> 
  mutate(lat = dim(img)[1] - lat)

ggplot(data = pts, aes(long, lat, label = Site)) +
  annotation_raster(img,
                    xmin = 0, xmax = dim(img)[2],
                    ymin = 0, ymax = dim(img)[1]) +
  geom_point(color = "red", size = 4) +
  geom_label_repel(size = 5, box.padding = 1,
                   seed = 12344, color = "red") +
  xlim(c(0, dim(img)[2])) +
  ylim(c(0, dim(img)[1])) +
  coord_equal() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank()) +
  ggpubr::theme_transparent()

```


## Spatial relationships

- Pairwise distances between all points

```{r}
pts <- pts |> 
  mutate(across(.cols = where(is.numeric), ~ .x / 500 * 30))
dist(pts) |> print(digits = 2)
```


## Shared Ancestry

- As soon as you have comparative data, you must consider the relationships among your taxa
    - No longer an option (30+ years of methods)
- Not concerned with making the tree(s)

<center>
*Trees are hypotheses of relationships. You have hypotheses resting on hypotheses.*
</center>


## Is body size associated with home range area in mammals?

Data from Garland et al. [-@Garland1992-bf]

- Body mass (km)
- Home range area (km^2^)


## Home range vs. body mass

```{r}
tree <- read.nexus("../data/49LBR70.PDI.nex")
lbr <- read_excel("../data/49LBR.xlsx")
lbr$Clade <- relevel(as.factor(lbr$Clade), ref = "Ungulates")

ggplot(lbr, aes(log_Mass, log_Home_Range)) +
  geom_point(size = 3) +
  labs(x = "log Body Mass", y = "log Home Range")
```


## Home range vs. body mass

```{r}
ggplot(lbr, aes(log_Mass, log_Home_Range, color = Clade)) +
  geom_point(size = 3) +
  labs(x = "log Body Mass", y = "log Home Range") +
  theme(legend.position = c(0.85, 0.2)) +
  scale_color_manual(values = wes_palette("FrenchDispatch"))
```


## Home range vs. body mass

```{r}
ggtree(tree, ladderize = FALSE) +
  geom_tiplab(size = 3) +
  geom_treescale()
```


## Home range vs. body mass

```{r}
tree2 <- groupClade(tree, .node = 51)
ggtree(tree2, aes(color = group), ladderize = FALSE) +
  geom_tiplab(size = 3) +
  geom_treescale() +
  scale_color_manual(values = wes_palette("FrenchDispatch"))
```


## Why phylogenetic comparative methods?

1. Meet the assumptions of standard statistical tests
    - Any test you can do using "standard" methods has a phylogenetically informed counterpart.
    - What is your evolutionary model?
2. Ask and answer interesting evolutionary questions
    - Trait evolution (continuous or categorical)
    - Trait co-evolution
    - Rates of evolution
    - What is your evolutionary model?


## Home range vs. body mass

```{r}
tree <- read.nexus("../data/49LBR70.PDI.nex")
lbr <- read_excel("../data/49LBR.xlsx") |> 
  as.data.frame()
lbr$Clade <- relevel(as.factor(lbr$Clade), ref = "Ungulates")
row.names(lbr) <- lbr$Species

# Clean up tree
tree$tip.label <- gsub("\\.", "", tree$tip.label)
tree$tip.label <- gsub("\\:", "", tree$tip.label)
```

```{r}
ggplot(lbr, aes(log_Mass, log_Home_Range, color = Clade)) +
  geom_point(size = 3) +
  labs(x = "log Body Mass", y = "log Home Range") +
  theme(legend.position = c(0.85, 0.2)) +
  scale_color_manual(values = wes_palette("FrenchDispatch"))
```


## Working with `nlme::gls()`

- We used `gls()` to fit the squid model, allowing correlated variance on a per-month basis
- Phylogenetically based correlation variation is a similar issue
- Choose a phylogenetic correlation structure


## Phylogenetic correlation structures

See ?`corClasses`

- `corBrownian`: Brownian motion model of evolution
- `corPagel`: Pagel's $\lambda$ branch length transformation
- `corMartins`: Stabilizing selection evolutionary model originally proposed by Martins and Hansen [-@Martins1997-yv]
- `corBlomberg`: Accelerating-Decelerating evolutionary model of Blomberg et al. [-@Blomberg2003-jk]


## Model 1: Mass, BM

```{r echo=FALSE}
#| echo: true

fm1 <- gls(log_Home_Range ~ log_Mass, data = lbr,
           correlation = corBrownian(phy = tree, form = ~ Species))
summary(fm1)
```


## Model 2: Mass + Clade, BM

```{r}
#| echo: true

fm2 <- gls(log_Home_Range ~ log_Mass + Clade , data = lbr,
           correlation = corBrownian(phy = tree, form = ~ Species))
summary(fm2)
```


## Model 3: Mass * Clade, BM

```{r}
#| echo: true

fm3 <- gls(log_Home_Range ~ log_Mass * Clade , data = lbr,
           correlation = corBrownian(phy = tree, form = ~ Species))
summary(fm3)
```


## Model comparison with AICc

```{r}
mods <- matrix(NA, nrow = 1, ncol = 3)
row.names(mods) <- c("Brownian Motion")
colnames(mods) <- c("Mass", "Mass + Clade", "Mass * Clade")
mods[1, 1] <- AICc(fm1)
mods[1, 2] <- AICc(fm2)
mods[1, 3] <- AICc(fm3)
kable(round(mods, 1))
```

Additive model is preferred (but all are pretty similar)

```{r}
coef(fm2)
```


## Kinship (non-independence) as a tool

When modeled correctly, non-independence between samples can be very useful:

- Forms the basis for how we estimate heritabilities, genetic correlations, etc.
- Very similar in concept to repeatability
- Estimate the variance within families/lines (groups) versus between families/lines
- Modern methods can consider complex pedigrees or relatedness estimated directly from genomic data


## Heritability and genetic correlation

![](https://i.imgur.com/AquXKrw.jpg){fig-align="center"}


## Load pedigree

```{r}
#| message: false

library(MCMCglmm)
library(kinship2)

data(BTped)
str(BTped)
```


## Look at part of pedigree

```{r}
Nped <- BTped[which(apply(BTped, 1, function(x) {
  any(x == "R187920" | x == "R187921")})), ]
Nped
```


## Plot part of pedigree

```{r}
#| warning: false

ped <- pedigree(id = Nped$animal,
                dadid = Nped$sire,
                momid = Nped$dam,
                sex = c(2, 1, rep(3, nrow(Nped) - 2)))
plot(ped)
```


## Genetic distance

```{r}
Aped <- 2 * kinship2::kinship(Nped[, 1], Nped[, 2], Nped[, 3])
Aped[1:6,1:6]
```


## Data

```{r}
#| echo: true

data(BTdata)
head(BTdata)
```


## Heritability of tarsus length

```{r}
#| eval: false
#| echo: true

prior <- list(R = list(V = 0.002, n = 2),
              G = list(G1 = list(V = 0.002, n = 2)))

fm1 <- MCMCglmm(
  fixed = tarsus ~ 1,
  random = ~ animal,
  prior = prior,
  family = c("gaussian"),
  nitt = 60000, burnin = 10000, thin = 25,
  data = BTdata, pedigree = BTped,
  verbose = FALSE)
save(fm1, file = "../data/BT_herit.Rda")
```

```{r}
load("../data/BT_herit.Rda")
```


## Fixed effects

```{r}
plot(fm1$Sol)
```


## Random effects

```{r}
plot(fm1$VCV)
```


## Heritability

$$h^2 = \frac{V_a}{V_a + V_r}$$

```{r}
#| echo: true

h2 <- fm1$VCV[, "animal"] / 
  (fm1$VCV[, "animal"] + fm1$VCV[, "units"])
```

```{r}
plot(h2)
```


## Heritability

```{r}
#| echo: true

median(h2)
HPDinterval(h2)
```


## Genetic correlation

```{r}
#| eval: false
#| echo: true

prior <- list(R = list(V = diag(2) * 1.001, n = 2),
              G = list(G1 = list(V = diag(2)  * 1.001, n = 2)))

fm2 <- MCMCglmm(
  fixed = cbind(back, tarsus) ~ trait,
  random = ~ us(trait):animal,
  rcov = ~ us(trait):units,
  prior = prior,
  family = c("gaussian", "gaussian"),
  nitt = 60000, burnin = 10000, thin = 25,
  data = BTdata, pedigree = BTped,
  verbose = FALSE)
save(fm2, file = "../data/BT_genetic_correlation.Rda")
```

```{r}
load("../data/BT_genetic_correlation.Rda")
```


## Genetic correlation

```{r}
#| echo: true

Genet_Corr <- fm2$VCV[ , "traittarsus:traitback.animal"] /
  sqrt(fm2$VCV[ , "traittarsus:traittarsus.animal"] *
         fm2$VCV[ , "traitback:traitback.animal"])
```

```{r}
plot(Genet_Corr)
```


## Genetic correlation

```{r}
#| echo: true

median(Genet_Corr)
HPDinterval(Genet_Corr)
```

## References

::: {#refs}
:::


