---
title: "Introduction to Multilevel Models"
author:
  - Elizabeth King
  - Kevin Middleton
format:
  revealjs:
    theme: [default, custom.scss]
    standalone: true
    self-contained: true
    logo: QMLS_Logo.png
    slide-number: true
    show-slide-number: all
code-annotations: hover
bibliography: QMLS_Bibliography.bib
csl: evolution.csl
---


```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(cowplot)
theme_set(theme_cowplot(font_size = 18))

library(readxl)
library(car)
library(glmmTMB)
library(gt)

# Datasets
#   RIKZ.xlsx
#   Ortho.xlsx
```


## Goals

*High Importance*:

- Understand the nature of the problems
- Understand the value in solving them

*Moderate Importance*:

- Begin to understand some model fitting procedures and interpretation

*Least Importance*:

- Understand the math involved


## Assumptions of linear models

1. Linearity
2. Independence
3. Equal variance
4. (Approximately) normal residuals

2 and 3: "Independent and identically distributed" (IID)


## The challenge of non-independence

- Our tests (so far) assume independence of samples.
- Many datasets have structure at additional levels beyond the main variable(s) of interest
    - Error in these levels is correlated (making the data non-independent)

We need a method to model the correlation structure.


## *Explicitly* correlated data

Via experimental design:

- Grouping 
    - Leaves within plants within treatments within fields
    - Treatments within plots within blocks 
- Repeated measurements of the same individual or unit (time, replicates)
- Spatial sampling


## *Implicitly* correlated data

As a side effect:

- Non-equal sample sizes, missing data
- Non-equal within-group variance
- Phylogenetic structure 
- Population structure and genetic relatedness 


## Some terminology

*Multilevel / hierarchical / mixed / repeated measures models*

- All refer to the same class of models, which contain both *fixed* and *random* variables.
- Some will further subdivide and draw fine distinctions between models.


## Some terminology

*Fixed effects*:

- Explanatory variables of primary interest
- Would be used again if the experiment were repeated
- Think of all the predictors we have used so far
    - Alive / dead horned lizards
    - Control / knees / eyes treatments
    - Naked mole rat caste


## Some terminology

*Random effects*

- Variables that are a "random" selection from a larger set of variables that allow for heterogeneity, correlation, phylogenetic or genetic structure, real random variation ($\epsilon$).
- Subject, block, etc.
- "Random" does not necessarily mean "not of interest."

Also see: [Why I donâ€™t use the term "fixed and random effects"](http://andrewgelman.com/2005/01/25/why_i_dont_use/)


## Fundamental idea of multilevel models

Units are *grouped* at different levels.

- Grouping takes different forms
- Groups provide a structure and make observations non-independent


## General multilevel model formula

$$Y = \theta_0 + \theta_1 X_1 + ... + \theta_n X_n + \mbox{Random} + \epsilon$$

Where $\mbox{Random}$ can be:

- Groups are nested
- Groups have different variances
- Observations are correlated
    - across time or space
    - phylogenetically or genetically


## Visualization of Hierarchical Modeling

[An Introduction to Hierarchical Modeling](http://mfviz.com/hierarchical-models/) by Michael Freeman


## Challenges to multilevel models

**Conceptual complexity**

- You must know your model
- Difficult to visualize
- Do my results make sense?

**Computational complexity**

- Maximum likelihood can fail to converge
- MCMC can be slow, difficult to implement
- Bayesian requires defining priors


## Technical replicates

```{r}
set.seed(123)  # Set seed for reproducibility

# Number of samples per group
num_samples_per_group <- 4

# Number of replicate measurements per group
num_replicates_per_sample <- 3

# Generate data for Group 1
group1 <- matrix(rnorm(num_samples_per_group * num_replicates_per_sample,
                       mean = 10, sd = 1.5),
                 nrow = num_samples_per_group,
                 ncol = num_replicates_per_sample) |> 
  as.data.frame() |> 
  rename(Rep1 = V1, Rep2 = V2, Rep3 = V3) |> 
  mutate(Sample = paste0("S", 1:4),
         Group = "Control")

# Generate data for Group 2
group2 <- matrix(rnorm(num_samples_per_group * num_replicates_per_sample,
                       mean = 22, sd = 4),
                 nrow = num_samples_per_group,
                 ncol = num_replicates_per_sample) |> 
  as.data.frame() |> 
  rename(Rep1 = V1, Rep2 = V2, Rep3 = V3) |> 
  mutate(Sample = paste0("S", 5:8),
         Group = "Treatment")

# Combine the data for both groups
all_data <- bind_rows(group1, group2) |> 
  relocate(Sample) |> 
  relocate(Group)

all_data_long <- all_data |> 
         pivot_longer(cols = -c(Sample, Group),
                      names_to = "Replicate", values_to = "Absorbance")

ggplot(all_data_long,
       aes(x = Group, y = Absorbance, group = Sample)) +
  geom_point(position = position_dodge(width = 0.75),
             size = 4) +
  theme(axis.title.x = element_blank(),
        legend.position = "none")
```


## Model considerations

- Comparison of means
- Account for
    - Multiple technical replicates per Sample
    - Different variances per group

```{r}
all_data_long |> 
  summarise(Mean = mean(Absorbance),
            SD = sd(Absorbance),
            .by = c(Group, Sample)) |> 
  gt() |> 
  fmt_number() |> 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels())
```


## Multilevel models in R: many options

- `nlme`: Restricted to a subset of models (linear and non-linear Gaussian)
- `lme4`: More complex models with flexible distributions of response variables
- `glmmTMB`: Might replace `lme4` eventually, lots of flexibility in distributions of response variables
- `MCMCglmm`, `rstan`, `brms`: Bayesian multilevel models


## Multilevel model formula syntax

`+ ( effect expression | groups )`

- `()` tells R that the formula specifies a multilevel model
- Pipe `|` separates the effect expression from the grouping variable
- Many ways to specify relationships
    - We will cover a few common ones here


## Simple block design

`Absorbance ~ Group + (1 | Sample)`

- Estimate a mean for each level of `Group` (main effect)
- Each `Sample` within group has it's own mean: `(1 | Sample)`
- Replicates don't appear explicitly in the model

```{r}
all_data_long |> 
  count(Group, Sample) |> 
  gt() |> 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels())
```


## Block designs and nested data

Why not calculate a mean for each sample and use those data for a "regular" linear model instead?

- Lose all the information about variability within replicates
- Might increase apparent variation


## Experimental design

![](https://www.sare.org/wp-content/uploads/Figure-4-Paired-Comparison-Experimental-Design-768x349.jpg){fig-align="center"}


## Experimental design

![](https://www.sare.org/wp-content/uploads/Figure-6-Split-Plot-Experimental-Design-768x394.jpg){fig-align="center"}


## Organizing the data

Wide format (how the data is collected):

```{r}
all_data
```

## Organizing the data

Long format (one row per observation):

```{r}
#| echo: true
all_data_long <- all_data |> 
  pivot_longer(cols = -c(Sample, Group),
               names_to = "Replicate", values_to = "Absorbance")
all_data_long
```


## Fitting a multilevel model

```{r}
#| echo: true
#| output-location: slide

library(glmmTMB)

fm <- glmmTMB(Absorbance ~ Group + (1 | Sample),
              data = all_data_long)
summary(fm)
```

`Absorbance ~ Group + (1 | Sample)` is very similar to the two-means model: `Absorbance ~ Group`

- `+ (1 | Sample)` fits a model where `Absorbance`s for each `Sample` are included in the model


## Longitudinal studies and repeated measures

Sequential measurements of the same individual / plot / organism, etc. will result in within-subject correlation.

- Growth curves
- Long-term ecological monitoring


## Cranial growth rates in children

Distance from the sella turcica to the pterygomaxillary fissure in growing children.

![](https://i.imgur.com/N9e47BR.jpg){fig-align="center"}


## Orthodontics data

```{r}
Or <- read_excel("../data/Ortho.xlsx") |>
  mutate(Subject = factor(Subject),
         Sex = factor(Sex))
Or
```

Data from Pothoff and Roy [-@Potthoff1964-cc]


## Orthodontics data

```{r}
#| echo: true

Or |> count(Sex, Subject)
Or |> count(Sex)
```



## Visualizing

```{r}
ggplot(Or, aes(x = Age, y = Distance)) +
  geom_line() +
  geom_point() +
  facet_wrap("Subject") +
  theme(axis.text = element_text(size = 9),
        strip.text = element_text(size = 10),
        axis.title = element_text(size = 10, face = "bold"))
```


## Visualizing

```{r}
ggplot(Or, aes(Age, Distance, color = Subject)) +
  geom_line() +
  geom_point() +
  facet_grid(. ~ Sex) +
  theme(legend.position = "none")
```


## What are the growth patterns of the head in boys and girls?

"Naive" linear model:

```{r}
#| echo: true

fm <- lm(Distance ~ 1 + Sex + Age, data = Or)
coef(fm)
```

- All observations are pooled for each individual

What should we do instead?


## Multilevel model

- Main effects of `Sex` and `Age` (like the naked mole rats model).
- Random effects allow the `Distance` relationship ("intercept") to vary for each `Subject`

```{r}
#| echo: true

fm2 <- glmmTMB(Distance ~ 1 + Sex + Age + (1 | Subject),
               data = Or)
```


## Model summary

```{r}
summary(fm2)
```


## Predicted values

Note: Creates all the combinations and `Sex` and `Subject` but then filter only the subjects of each sex.

```{r}
#| echo: true

Preds <- crossing(Age = c(min(Or$Age), max(Or$Age)),
                  Sex = unique(Or$Sex),
                  Subject = unique(Or$Subject)) |> 
  filter(Sex == "Female" & str_detect(Subject, "F") | 
           Sex == "Male" & str_detect(Subject, "M"))

# Overall
Preds$Pred0 <- predict(fm2, newdata = Preds, re.form = ~ 0)

# Age within Subject
Preds$Pred1 <- predict(fm2, newdata = Preds)
```


## Visualizing

```{r}
#| echo: false

ggplot() +
  geom_point(data = Or, aes(Age, Distance, color = Subject)) +
  geom_line(data = Preds, aes(x = Age, y = Pred1, color = Subject)) +
  geom_line(data = Preds, aes(x = Age, y = Pred0), lwd = 2) +
  labs(x = "Age", y = "Distance") +
  facet_grid(. ~ Sex) +
  theme(legend.position = "none")
```


## ANOVA table

```{r}
#| echo: true

Anova(fm2, type = "III")
```


## Is there a "better" model?

1. Fit a common growth rate for all individuals, regardless of sex (this lecture)
1. Fit different growth rates by sex (multilevel interaction model)
1. Allow individual longitudinal growth rates (multilevel model with per-individual rates)

How can we decide which model fits the observed data "best"?

- Coming soon...


## Reasons to use multilevel models

Adapted from McElreath [-@McElreath2015-no]

- *To adjust estimates for repeat sampling*. When more than one observation arises from the same individual, location, or time, then traditional, single-level models may mislead us.
- *To adjust estimates for imbalance in sampling*. When some individuals, locations, or times are sampled more than others, we may also be misled by single-level models.


## Reasons to use multilevel models

Adapted from McElreath [-@McElreath2015-no]

- *To study variation*. If research questions include variation among individuals or other groups within the data, multilevel models help, because they model variation explicitly.
- *To avoid averaging*. Avoid pre-average to construct variables for a regression analysis. Averaging removes variation. Multilevel models allow us to preserve the uncertainty in the original, pre-averaged values, while still using the average to make predictions.


## Can poor experimental design be saved by multilevel models?

No.


## References

::: {#refs}
:::

